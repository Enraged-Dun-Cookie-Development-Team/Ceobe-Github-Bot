name: 生成安装访问令牌

outputs:
  APP_TOKEN:
    value: ${{ steps.gen-app-token.outputs.APP_TOKEN }}
  ENCRYPTED_TOKEN:
    value: ${{ steps.gen-app-token.outputs.ENCRYPTED_VALUE }}


runs:
  using: composite
  steps:
    - uses: actions/setup-node@v3
      with:
        node-version: 18 # node版本
    - run: npm i @octokit/rest @octokit/auth-app @actions/core
    - env:
        SCRIPT_CONTENT: |
          import * as core from '@actions/core';
          import { Octokit } from "@octokit/rest";
          import { createAppAuth } from "@octokit/auth-app";
          
          const appOctokit = new Octokit({ authStrategy: createAppAuth, auth: { appId: '${{ secrets.CEOBE_GITHUB_APP_ID }}', privateKey: `${{ secrets.CEOBE_GITHUB_APP_PRIVATE_KEY }}` } });
          const installation = await appOctokit.rest.apps.getOrgInstallation({ org: '${{ github.repository_owner }}' });
          const result = await appOctokit.rest.apps.createInstallationAccessToken({ installation_id: installation.data.id });
          const token = result.data.token;
          core.setSecret(token);
          core.setOutput('APP_TOKEN', token);
      run: echo "$SCRIPT_CONTENT" >> generate-token.mjs
    - id: gen-app-token
      run: node generate-token.mjs
    - id: encrypt-app-token
      uses: ./actions/encrypt-secret
      with:
        VALUE: ${{ steps.gen-app-token.outputs.APP_TOKEN }}
